mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% str_replace_all(operation,"[:punct:]", " ")
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% str_replace_all(operation,"[::punct::]", " ")
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% str_replace(operation,"[::punct::]", " ")
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% str_replace(operation,"\\w+", " ")
?str_replace
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"_", "\\_"))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"_", "\\_"))
View(df)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"_", "\\\_"))
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"\\w+", " "))
View(df)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"\\W", " "))
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"\\W+", " "))
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\tiny\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./basic_derivation_tableaux.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
