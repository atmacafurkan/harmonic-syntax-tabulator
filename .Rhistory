library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I$_{%s}$: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n"
,
winner_no, c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\small \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\tiny\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./trial.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
df_der <- readRDS("basic_derivation.rds")
solution <- readRDS("basic_solution.rds")
df <- df_der %>% mutate(harmony = rowSums(sweep(.[,5:17], MARGIN = 2, solution, '*'))) %>%
mutate(winner = ifelse(freq == 1, T, F)) %>%
dplyr::select(cycle_number, operation, input, output, winner,
names(which(solution != 0)), harmony)
rm(df_der)
df %<>% group_by(cycle_number) %>% mutate(cand_no = 1:n()) %>% mutate(operation = str_replace(operation,"[:punct:]", " "))
winner_no <- "1"
total_printing <- character()
for (each in 1:length(unique(df$cycle_number))){
c_step <- df %>% subset(cycle_number == each)
full_table <- c_step %>% ungroup() %>% dplyr::select(winner, operation, lab, mc, case_agr, case_mt, copy, exnum, harmony) %>%
mutate(cand = sprintf("%s & %s & %s & %s & %s & %s & %s & %s & %s",
ifelse(winner, "\\HandRight",""),
operation,
lab, mc, case_agr, case_mt, copy, exnum, round(harmony)))
candidates <- paste(full_table$cand, collapse = "\\\\\\hline\n")
# modify output numbers
c_step$cand_no <- paste0(winner_no,".",c_step$cand_no)
printing <- sprintf(
"\\hbox{\\small\\begin{tabular}{|rl||c|c|c|c|c|c|c|}\\hline
\\multicolumn{2}{|l||}{I: \\hbox{\\tiny \\begin{forest} %s \\end{forest}}} & \\textsc{lab} & \\textsc{mc} & \\textsc{agr} & \\textsc{mt} & \\textsc{copy} & \\textsc{Exnum} & H\\\\\\hline
%s\\\\\\hline
\\end{tabular}}\n\n \\framebreak \n"
,
c_step$input[1],candidates)
total_printing %<>% append(printing)
# set new winner no
winner_no <<- c_step$cand_no[which(c_step$winner)]
}
file_con <- file("./basic_derivation_tableaux.txt")
writeLines(total_printing, file_con, sep = "\n")
close(file_con)
library(tidyverse)
library(magrittr)
library(philentropy)
library(optimx)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
source("./machinery2.0/weight_optimizer.R")
df <- read.csv("ewe_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
library(tidyverse)
library(magrittr)
library(philentropy)
library(optimx)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
source("./machinery2.0/weight_optimizer.R")
df <- read.csv("ewe_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
dt_trial <- mergeMC("DP1","V", numeration = df)
df <- df[c(-1,-2),]
View(df)
winner_output <- 100
my_derivation <- tibble()
last_tree <- list()
last_numeration <- list()
count <- 0
v_phased <- 0
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
library(tidyverse)
library(magrittr)
library(philentropy)
library(optimx)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
source("./machinery2.0/weight_optimizer.R")
df <- read.csv("ewe_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
dt_trial <- mergeMC("DP1","V", numeration = df)
df <- df[c(-1,-2),]
winner_output <- 100
my_derivation <- tibble()
last_tree <- list()
last_numeration <- list()
count <- 0
v_phased <- 0
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
