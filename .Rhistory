subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
merging_r <- my_tree$Get("lb", filterFun = function(x) x$position == 2)
subcat_r[which(merging_r == subcat_r)] <- ""
subcat_r
# check complement merge conditions
subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
subcat_r
df <- read_csv("basic_numeration.csv", na = "NA")
View(df)
my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator")
my_tree <- Clone(new_ish)
my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator")
my_tree <- Clone(new_ish)
# check complement merge conditions
subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
merging_r <- my_tree$Get("lb", filterFun = function(x) x$position == 2)
subcat_r
# check complement merge conditions
subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
subcat_r
my_tree
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator")
my_tree <- Clone(new_ish)
my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_tree <- Clone(output)
my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator")
my_tree <- Clone(new_ish)
my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
output
output$left_arg
print(output$left_arg, "mc")
Get(output$left_arg, "mc")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
View(df)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
View(df)
problems()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read_csv("basic_numeration.csv", na = "NA")
problems()
?read.csv
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA")
View(df)
df <- read.csv("basic_numeration.csv", na.strings = "NA")
View(df)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA")
str(df)
?read.csv
read_csv("basic_numeration.csv", na = "NA")
?read_csv,
?read_csv
read.csv("basic_numeration.csv", na_strings = "NA")
read.csv("basic_numeration.csv", na.strings = "NA")
?replace_na
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>% replace_na(mc, "")
rlang::last_error()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc),replace_na(mc, ""), mc))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator")
my_tree <- Clone(new_ish)
# check complement merge conditions
subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
merging_r <- my_tree$Get("lb", filterFun = function(x) x$position == 2)
subcat_r
print(new_ish, "ac","ft","lb","mc","n_dominator", "is_copy")
# check complement merge conditions
subcat_r <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
merging_r <- my_tree$Get("lb", filterFun = function(x) x$position == 2)
subcat_r[which(merging_r == subcat_r)] <- ""
my_tree$Set(mr = subcat_r, filterFun = function(x) x$position == 1 & isNotRoot(x))
# check specifier merge conditions
subcat_l <- my_tree$Get("mc", filterFun = function(x) x$position == 1 & isNotRoot(x))
merging_l <- my_tree$Get("lb", filterFun = function(x) x$position == 1 & isNotRoot(x)) %>%
append("",.) %>% head(-1)
subcat_l[which(merging_l == subcat_l)] <- ""
my_tree$Set(ml = subcat_l, filterFun = function(x) x$position == 1 & isNotRoot(x))
# combine number of violations
violations <- tibble(mc =length(which(!is.na(my_tree$Get("mr", filterFun = isLeaf)))) +
length(which(!is.na(my_tree$Get("ml", filterFun = isLeaf)))))
violations
length(which(!is.na(my_tree$Get("mr", filterFun = isLeaf))))
which(!is.na(my_tree$Get("mr", filterFun = isLeaf)))
my_tree$Get("mr", filterFun = isLeaf)
subcat_r
subcat_l
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
Get(my_tree$left_arg, "mc")
Get(my_tree$children[1], "mc")
my_tree$left_arg$Get("mc")
my_tree
my_tree
my_tree$right_arg("mc")
my_tree$right_arg$Get("mc")
my_tree$right_arg$Get("lb")
my_tree
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
base_der %>% cons_lab()
base_der %>% cons_marked()
base_der %>% cons_agree()
base_der %>% cons_merge()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
my_tree$children
length(my_tree$children)
length(base_der$children)
my_tree$left_arg$Get("mc")[1]
my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
mc_left <- my_tree$left_arg$Get("mc")[1]
lb_right <- my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
my_tree$left_arg$Get("m_vio")[1]
my_tree$left_arg$Set(m_vio = 1, filterFun = isRoot)
my_tree$left_arg$Get("m_vio")[1]
print(my_tree, "m_vio")
my_tree$left_arg$Set(m_vio = prev_count + 1)
prev_count <- my_tree$left_arg$Get("m_vio")[1]
my_tree$left_arg$Set(m_vio = prev_count + 1)
print(my_tree, "m_vio")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
base_der
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
mergeMC("DP1","V",df)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() #%>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
mc_left <- my_tree$left_arg$Get("mc")[1]
lb_right <- my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
my_tree
length(my_tree$children) > 1
mc_left <- my_tree$left_arg$Get("mc")[1]
lb_right <- my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
my_tree$Set(m_vio = 1, filterFun = isRoot)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree$Set(m_vio = 1)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree$Set("m_vio" = 1)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree$Set(levelName = "x")
my_tree$Set(ft = "x")
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
print(my_tree, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
my_tree$left_arg$Get("mc")[1]
my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
my_tree$left_arg$Get("mc")[1]
my_tree$right_arg$Get("lb")[1]
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA")
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
base_der <- mergeMC("V",numeration = df)
print(base_der, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
output <- mergeMC("DP1","V",df) %>% labelMC() %>% mergeMC("v",df) %>% labelMC()
plot(output)
my_list <- list()
moveMC(output)
new_ish <- Clone(my_list[[4]]) %>% labelMC() %>% mergeMC("T",df)
print(new_ish, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(new_ish)
my_tree$left_arg$Get("mc")[1]
my_tree$left_arg$Get("mc")[1] %>% as.numeric()
lb_right <- my_tree$right_arg$Get("lb")[1]
my_tree$left_arg$Get("mc")[1] %>% as.numeric()
my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
mc_left <- my_tree$left_arg$Get("mc")[1] %>% as.numeric()
lb_right <- my_tree$right_arg$Get("lb")[1]
mc_left != lb_right
my_tree$left_arg$Set(m_vio = 1)
print(my_tree, "ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
mc_right <- my_tree$right_arg$Get("mc")[1]
lb_left <- my_tree$left_arg$Get("lb")[1]
mc_right != lb_left
mc_right
lb_left
