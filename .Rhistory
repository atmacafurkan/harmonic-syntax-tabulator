my_tree <- Clone(my_tree$children[[1]])
length(my_tree$children)>1
paste0("[",
case_when(my_tree$it == 0 ~ "",
my_tree$is_copy == 1 ~ paste0(my_tree$it,"$_c$"),
T ~ my_tree$it),
"$_{",
ifelse(my_tree$is_copy,"",my_tree$ft),
"}$",
"$_{a:",
ifelse(my_tree$is_copy,"",my_tree$ac),
"}$",
"]")
my_tree <- Clone(my_list[[2]])
my_tree <- Clone(my_tree$children[[2]])
my_tree <- Clone(my_tree$children[[2]])
length(my_tree$children)>1
paste0("[",
case_when(my_tree$it == 0 ~ "",
my_tree$is_copy == 1 ~ paste0(my_tree$it,"$_c$"),
T ~ my_tree$it),
"$_{",
ifelse(my_tree$is_copy,"",my_tree$ft),
"}$",
"$_{a:",
ifelse(my_tree$is_copy,"",my_tree$ac),
"}$",
"]")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_tree <- Clone(my_list[[2]])
my_list[[2]] %>% linear_tree2()
?isLeaf
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
x <- mergeMC("DP1","V",numeration = df) %>% labelMC()
x %>% linear_tree2()
my_tree <- Clone(x)
my_Tree
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
x <- mergeMC("DP1","V",numeration = df) %>% labelMC()
my_tree <- Clone(x)
my_tree
isLeaf(my_tree)
linear_tree2(my_tree$left_arg)
linear_tree2(my_tree$right_arg)
# Non-leaf node
left_str <- linear_tree2(my_tree$left_arg)
right_str <- linear_tree2(my_tree$right_arg)
written <- paste0("[",
ifelse(my_tree$it == 0, "",
ifelse(my_tree$is_copy == 1, paste0(my_tree$it,"$_c$"), my_tree$it)),
"$_{",
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc),
"}$",
left_str,
" ",
right_str,
"]"
)
my_tree$it
my_tree$is_copy == 1
my_tree$is_copy == 1
is.null(my_tree$mc)
written <- paste0("[",
ifelse(my_tree$it == 0, "",
ifelse(my_tree$is_copy == 1, paste0(my_tree$it,"$_c$"), my_tree$it)),
"$_{",
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc),
"}$",
left_str,
" ",
right_str,
"]"
)
paste0("[",
ifelse(my_tree$it == 0, "",
ifelse(my_tree$is_copy == 1, paste0(my_tree$it,"$_c$"), my_tree$it)),
"$_{",
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc),
"}$",left_str," ",right_str,"]")
my_tree$it
paste0(my_tree$it,"$_c$")
my_tree$it
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc)
my_tree$mc
is.null(my_tree$mc)
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc)
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
T ~ my_tree$mc)
my_tree$is_copy == 1
is.null(my_tree$mc)
case_when(my_tree$is_copy == 1 ~ "",
is.null(my_tree$mc) ~ "",
my_tree$mc)
my_tree$mc
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
x <- mergeMC("DP1","V",numeration = df) %>% labelMC()
x %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_list[[2]] %>% linear_tree2()
rlang::last_error()
my_list[[2]]
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_list[[2]] %>% linear_tree2()
my_list[[2]] %>% labelMC()%>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_list[[2]] %>% labelMC()%>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
my_list <- list()
mergeMC("DP1","V",numeration = df) %>% labelMC() %>% moveMC()
print(my_list[[2]], "it","mc","ac","ft","lb","mc","m_vio","n_dominator", "is_copy")
my_list[[2]] %>% linear_tree2()
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
dt_trial <- mergeMC("DP1","V", numeration = df)
df <- df[c(-1,-2),]
winner_output <- 100
my_derivation <- tibble()
last_tree <- list()
last_numeration <- list()
count <- 0
v_phased <- 0
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
dt_trial <- mergeMC("DP1","V", numeration = df)
df <- df[c(-1,-2),]
winner_output <- 100
my_derivation <- tibble()
last_tree <- list()
last_numeration <- list()
count <- 0
v_phased <- 0
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
library(tidyverse)
library(magrittr)
library(data.tree)
source("./machinery2.0/updated_gen_functions.R")
source("./machinery2.0/updated_eval_functions.R")
source("./machinery2.0/updated_cyclic_operator.R")
source("./machinery2.0/updated_draw_latex.R")
df <- read.csv("basic_numeration.csv", na.strings = "NA") %>%
mutate(mc = ifelse(is.na(mc), "", mc))
dt_trial <- mergeMC("DP1","V", numeration = df)
df <- df[c(-1,-2),]
winner_output <- 100
my_derivation <- tibble()
last_tree <- list()
last_numeration <- list()
count <- 0
v_phased <- 0
while(winner_output != 0){
if (winner_output == 100){
my_cycle <- cycle_step(dt_trial, df)
}else{
my_cycle <- cycle_step(my_cycle[[winner_output]]$tree, my_cycle[[winner_output]]$numeration)
}
current_eval <- prepare_tableau(my_cycle)
View(current_eval)
winner_output <- readline(prompt = "Winner output: ");
winner_output %<>% as.integer()
if(winner_output !=0){
count <- count+1
current_eval$cycle_number <- count
current_eval %<>% set_winner(winner_output)
my_derivation %<>% rbind(current_eval)
last_tree <- my_cycle[[winner_output]]$tree
last_numeration <- my_cycle[[winner_output]]$numeration}
}
